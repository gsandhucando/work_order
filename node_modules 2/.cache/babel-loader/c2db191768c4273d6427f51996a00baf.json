{"ast":null,"code":"import _slicedToArray from \"/Users/gsandhu916/Desktop/projects/hatchways_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Header = () => {\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      workOrder = _useState2[0],\n      setWorkOrder = _useState2[1];\n\n  useEffect(() => {\n    const results = axios.get(\"https://www.hatchways.io/api/assessment/work_orders\").then(response => {\n      let _response$data = _slicedToArray(response.data, 1),\n          orders = _response$data[0];\n\n      console.log(orders);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \"spring switch newest / latest\");\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js"],"names":["React","useState","useEffect","axios","Header","workOrder","setWorkOrder","results","get","then","response","data","orders","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA,kBACeH,QAAQ,CAAC,EAAD,CADvB;AAAA;AAAA,MACbI,SADa;AAAA,MACFC,YADE;;AAGnBJ,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMK,OAAO,GAAGJ,KAAK,CAACK,GAAN,wDACfC,IADe,CACVC,QAAQ,IAAI;AAAA,0CACDA,QAAQ,CAACC,IADR;AAAA,UACXC,MADW;;AAEhBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAJe,CAAhB;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kCADF;AAOD,CAlBD;;AAoBA,eAAeR,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst Header = () => {\n  let [ workOrder, setWorkOrder ] = useState([]);\n\n  useEffect(()=> {\n    const results = axios.get(`https://www.hatchways.io/api/assessment/work_orders`)\n    .then(response => {\n      let [orders] = response.data\n      console.log(orders)\n    })\n  }, [])\n\n  return(\n    <div>\n      <input />\n      spring switch newest / latest\n\n    </div>\n  )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}