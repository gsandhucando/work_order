{"ast":null,"code":"import _objectSpread from \"/Users/gsandhu916/Desktop/projects/hatchways_app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/gsandhu916/Desktop/projects/hatchways_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { throttle } from 'lodash';\nimport WorkOrder from './WorkOrder';\n\nconst Header = () => {\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      workOrders = _useState2[0],\n      setWorkOrders = _useState2[1];\n\n  let _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      savedWorkers = _useState4[0],\n      setSavedWorkers = _useState4[1];\n\n  useEffect(() => {\n    axios.get(\"https://www.hatchways.io/api/assessment/work_orders\").then(res => {\n      setWorkOrders(res.data.orders);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n\n  function onInputChange(event) {\n    console.log(event.target.value);\n    let inputInfo = event.target.value;\n    let filteredOrders = workOrders.filter(each => {\n      return each.workerId === savedWorkers[inputInfo];\n    });\n    setWorkOrders(filteredOrders);\n  }\n\n  let throttledChange = throttle(onInputChange, 500);\n\n  function savedWork(workerName, worker_id) {\n    setSavedWorkers(_objectSpread({}, savedWorkers, {\n      [workerName]: worker_id\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Please enter name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \"spring switch newest / latest\", React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, workOrders.map(order => {\n    return React.createElement(WorkOrder, Object.assign({\n      key: order.id\n    }, order, {\n      savedWork: savedWork,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  })));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js"],"names":["React","useState","useEffect","axios","throttle","WorkOrder","Header","workOrders","setWorkOrders","savedWorkers","setSavedWorkers","get","then","res","data","orders","catch","err","console","log","message","onInputChange","event","target","value","inputInfo","filteredOrders","filter","each","workerId","throttledChange","savedWork","workerName","worker_id","display","flexWrap","justifyContent","map","order","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA,kBACiBL,QAAQ,CAAC,EAAD,CADzB;AAAA;AAAA,MACbM,UADa;AAAA,MACDC,aADC;;AAAA,mBAEqBP,QAAQ,CAAC,EAAD,CAF7B;AAAA;AAAA,MAEbQ,YAFa;AAAA,MAECC,eAFD;;AAInBR,EAAAA,SAAS,CAAC,MAAK;AACbC,IAAAA,KAAK,CAACQ,GAAN,wDACCC,IADD,CACMC,GAAG,IAAI;AACXL,MAAAA,aAAa,CAACK,GAAG,CAACC,IAAJ,CAASC,MAAV,CAAb;AACD,KAHD,EAICC,KAJD,CAIOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD,KAND;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,QAAIC,SAAS,GAAGH,KAAK,CAACC,MAAN,CAAaC,KAA7B;AACA,QAAIE,cAAc,GAAGnB,UAAU,CAACoB,MAAX,CAAkBC,IAAI,IAAI;AAC7C,aAAOA,IAAI,CAACC,QAAL,KAAkBpB,YAAY,CAACgB,SAAD,CAArC;AACD,KAFoB,CAArB;AAGAjB,IAAAA,aAAa,CAACkB,cAAD,CAAb;AACD;;AAED,MAAII,eAAe,GAAG1B,QAAQ,CAACiB,aAAD,EAAgB,GAAhB,CAA9B;;AAEA,WAASU,SAAT,CAAmBC,UAAnB,EAA+BC,SAA/B,EAA0C;AACxCvB,IAAAA,eAAe,mBAAKD,YAAL;AAAmB,OAACuB,UAAD,GAAcC;AAAjC,OAAf;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAEZ,aAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,WAAW,EAAC,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mCAGA;AAAK,IAAA,KAAK,EAAE;AAACa,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,QAAQ,EAAE,MAA5B;AAAoCC,MAAAA,cAAc,EAAE;AAApD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE7B,UAAU,CAAC8B,GAAX,CAAeC,KAAK,IAAI;AACxB,WAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACC;AAAtB,OAA8BD,KAA9B;AAAqC,MAAA,SAAS,EAAEP,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFC,CADF,CAHA,CADF;AAYD,CA1CD;;AA4CA,eAAezB,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {throttle} from 'lodash';\n\nimport WorkOrder from './WorkOrder';\n\nconst Header = () => {\n  let [ workOrders, setWorkOrders ] = useState([]);\n  let [ savedWorkers, setSavedWorkers ] = useState({});\n\n  useEffect(()=> {\n    axios.get(`https://www.hatchways.io/api/assessment/work_orders`)\n    .then(res => {\n      setWorkOrders(res.data.orders)\n    })\n    .catch(err => {\n      console.log(err.message)\n    })\n\n  }, [])\n\n  function onInputChange(event) {\n    console.log(event.target.value)\n    let inputInfo = event.target.value\n    let filteredOrders = workOrders.filter(each => {\n      return each.workerId === savedWorkers[inputInfo]\n    })\n    setWorkOrders(filteredOrders)\n  }\n\n  let throttledChange = throttle(onInputChange, 500)\n\n  function savedWork(workerName, worker_id) {\n    setSavedWorkers({...savedWorkers, [workerName]: worker_id})\n  }\n\n  return(\n    <div>\n      <input onChange={onInputChange} type='text' placeholder='Please enter name'/>\n      spring switch newest / latest\n    <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\n    { workOrders.map(order => {\n      return <WorkOrder key={order.id} {...order} savedWork={savedWork} />\n    })\n    }\n    </div>\n    </div>\n  )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}