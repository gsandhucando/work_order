{"ast":null,"code":"import _slicedToArray from \"/Users/gsandhu916/Desktop/projects/hatchways_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport env from '../env.json';\nimport WorkOrder from './WorkOrder';\n\nconst Header = () => {\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      workOrders = _useState2[0],\n      setWorkOrders = _useState2[1];\n\n  let _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      savedWorkers = _useState4[0],\n      setSavedWorkers = _useState4[1];\n\n  let _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      savedWorkOrders = _useState6[0],\n      setSavedWorkOrders = _useState6[1];\n\n  let _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  useEffect(() => {\n    //call the work orders\n    axios.get(\"\".concat(env.API_URL, \"/assessment/work_orders\")).then(res => {\n      //set workorders\n      setWorkOrders(res.data.orders); //have to keep original data before changing so had to set original copy then set it\n\n      setSavedWorkOrders(res.data.orders); //setting error message if res.status === 200\n\n      setErrorMessage('');\n    }).catch(err => {\n      console.log(err); //set error message if bad request\n\n      setErrorMessage('Cant find work orders.');\n    });\n  }, []);\n\n  function onInputChange(event) {\n    console.log(event.target.value);\n    let inputInfo = event.target.value.replace(' ', '').toLowerCase().trim();\n    let filteredOrders = savedWorkOrders.filter(each => {\n      //hash table\n      return each.workerId === savedWorkers[inputInfo];\n    });\n\n    if (filteredOrders.length > 0) {\n      setWorkOrders(filteredOrders);\n    } else {\n      if (workOrders.length !== savedWorkOrders.length) {\n        setWorkOrders(savedWorkOrders);\n      }\n    }\n  }\n\n  function earliest() {\n    let sortedWorkOrder = workOrders.slice();\n    sortedWorkOrder.sort((a, b) => {\n      return a.deadline - b.deadline;\n    });\n    setWorkOrders(sortedWorkOrder);\n  }\n\n  function latest() {\n    let sortedWorkOrder = workOrders.slice();\n    sortedWorkOrder.sort((a, b) => {\n      return b.deadline - a.deadline;\n    });\n    console.log(sortedWorkOrder);\n    setWorkOrders(sortedWorkOrder);\n  }\n\n  function savedWork(workerName, worker_id) {\n    //created object copy hash table that takes in the workers key = name and value = id\n    let newSavedWorkers = Object.assign({}, savedWorkers, {\n      [workerName.replace(' ', '').toLowerCase().trim()]: worker_id\n    });\n    setSavedWorkers(newSavedWorkers);\n  }\n\n  console.log(savedWorkers);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    style: {\n      width: '35%',\n      paddingLeft: 10,\n      height: '30px',\n      marginTop: 10\n    },\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Please enter name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: {\n      height: 40,\n      width: 100\n    },\n    onClick: earliest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"EARLIEST\"), React.createElement(\"button\", {\n    style: {\n      height: 40,\n      width: 100\n    },\n    onClick: latest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"LATEST\")), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, workOrders.map(order => {\n    return React.createElement(WorkOrder, Object.assign({\n      key: order.id\n    }, order, {\n      savedWork: savedWork,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  })));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js"],"names":["React","useState","useEffect","axios","env","WorkOrder","Header","workOrders","setWorkOrders","savedWorkers","setSavedWorkers","savedWorkOrders","setSavedWorkOrders","errorMessage","setErrorMessage","get","API_URL","then","res","data","orders","catch","err","console","log","onInputChange","event","target","value","inputInfo","replace","toLowerCase","trim","filteredOrders","filter","each","workerId","length","earliest","sortedWorkOrder","slice","sort","a","b","deadline","latest","savedWork","workerName","worker_id","newSavedWorkers","Object","assign","width","paddingLeft","height","marginTop","display","flexWrap","justifyContent","map","order","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport env from '../env.json'\n\nimport WorkOrder from './WorkOrder';\n\nconst Header = () => {\n  let [ workOrders, setWorkOrders ] = useState([]);\n  let [ savedWorkers, setSavedWorkers ] = useState({});\n  let [savedWorkOrders, setSavedWorkOrders] = useState([]);\n  let [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(()=> {\n    //call the work orders\n    axios.get(`${env.API_URL}/assessment/work_orders`)\n    .then(res => {\n      //set workorders\n      setWorkOrders(res.data.orders)\n      //have to keep original data before changing so had to set original copy then set it\n      setSavedWorkOrders(res.data.orders)\n      //setting error message if res.status === 200\n      setErrorMessage('')\n    })\n    .catch(err => {\n      console.log(err)\n      //set error message if bad request\n      setErrorMessage('Cant find work orders.')\n    })\n\n  }, [])\n\n  function onInputChange(event) {\n    console.log(event.target.value)\n    let inputInfo = event.target.value.replace(' ', '').toLowerCase().trim()\n    let filteredOrders = savedWorkOrders.filter(each => {\n      //hash table\n      return each.workerId === savedWorkers[inputInfo]\n    })\n    if (filteredOrders.length > 0) {\n      setWorkOrders(filteredOrders)\n    } else {\n      if(workOrders.length !== savedWorkOrders.length){\n        setWorkOrders(savedWorkOrders)\n      }\n    }\n  }\n\n  function earliest() {\n    let sortedWorkOrder = workOrders.slice()\n    sortedWorkOrder.sort((a,b) => {\n      return a.deadline-b.deadline\n    })\n    setWorkOrders(sortedWorkOrder)\n  }\n\n  function latest() {\n    let sortedWorkOrder = workOrders.slice()\n    sortedWorkOrder.sort((a,b) => {\n      return b.deadline-a.deadline\n    })\n    console.log(sortedWorkOrder)\n    setWorkOrders(sortedWorkOrder)\n  }\n\n  function savedWork(workerName, worker_id) {\n    //created object copy hash table that takes in the workers key = name and value = id\n    let newSavedWorkers = Object.assign({}, savedWorkers, {[workerName.replace(' ', '').toLowerCase().trim()]: worker_id})\n    setSavedWorkers(newSavedWorkers)\n  }\n  console.log(savedWorkers)\n  return(\n    <div>\n      {/* set error message remember to setErrorMessage to '' if good request */}\n      <input style={{width: '35%', paddingLeft: 10, height: '30px', marginTop: 10}} onChange={onInputChange} type='text' placeholder='Please enter name'/>\n      <div style={{marginTop: 10}}>\n      <button style={{height: 40, width: 100}} onClick={earliest}>EARLIEST</button>\n      <button style={{height: 40, width: 100}} onClick={latest}>LATEST</button>\n      </div>\n    <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\n    { workOrders.map(order => {\n      return <WorkOrder key={order.id} {...order} savedWork={savedWork} />\n    })\n    }\n    </div>\n    </div>\n  )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}