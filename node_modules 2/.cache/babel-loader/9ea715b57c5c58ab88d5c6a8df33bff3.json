{"ast":null,"code":"import _slicedToArray from \"/Users/gsandhu916/Desktop/projects/hatchways_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/WorkOrder.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport env from '../env.json';\n\nconst WorkOrder = ({\n  workerId,\n  name,\n  description,\n  deadline,\n  id,\n  savedWork\n}) => {\n  let _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      worker = _useState2[0],\n      setWorker = _useState2[1];\n\n  let _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  useEffect(() => {\n    axios.get(\"\".concat(env.API_URL, \"/assessment/workers/\").concat(workerId)).then(response => {\n      setWorker(response.data.worker); //the state we want to change is in body but we need to keep track of all the workers so we use the hash table in the body it passes the information back\n\n      savedWork(response.data.worker.name, response.data.worker.id);\n      setErrorMessage(\"\");\n    }).catch(err => {\n      console.log(err);\n      setErrorMessage(err);\n    });\n  }, []);\n  let styles = {\n    workOrderContainer: {\n      display: 'flex',\n      flexDirection: 'column' // justifyContent: 'center'\n\n    },\n    wordOrderCard: {\n      margin: 10,\n      height: '40vh',\n      width: '40vw',\n      background: '#F0F8FF',\n      boxShadow: '5px 7px #888888',\n      borderRadius: 5\n    }\n  };\n  let email = worker.email,\n      companyName = worker.companyName,\n      image = worker.image;\n  let worker_name = worker.name;\n  let formatedDate = new Date(deadline);\n  let error = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, errorMessage));\n  return React.createElement(React.Fragment, null, errorMessage.length > 0 ? error : React.createElement(\"div\", {\n    style: styles.workOrderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.wordOrderCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, name), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, description)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '10px 0 0 10px',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      borderRadius: '50%',\n      height: 100\n    },\n    src: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignContent: 'center',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, worker_name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, companyName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, email)))), React.createElement(\"div\", {\n    style: {\n      textAlign: 'right',\n      paddingRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\".concat(formatedDate.getMonth(), \"/\").concat(formatedDate.getDate(), \"/\").concat(formatedDate.getFullYear(), \" \").concat(formatedDate.toLocaleTimeString('en-US'))))));\n};\n\nexport default WorkOrder;","map":{"version":3,"sources":["/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/WorkOrder.js"],"names":["React","useEffect","useState","axios","env","WorkOrder","workerId","name","description","deadline","id","savedWork","worker","setWorker","errorMessage","setErrorMessage","get","API_URL","then","response","data","catch","err","console","log","styles","workOrderContainer","display","flexDirection","wordOrderCard","margin","height","width","background","boxShadow","borderRadius","email","companyName","image","worker_name","formatedDate","Date","error","length","padding","justifyContent","alignContent","textAlign","paddingRight","getMonth","getDate","getFullYear","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport env from '../env.json'\n\nconst WorkOrder = ({workerId, name, description, deadline, id, savedWork}) => {\n  let [worker, setWorker] = useState({})\n  let [errorMessage, setErrorMessage] = useState(\"\");\n\nuseEffect(() => {\n  axios.get(`${env.API_URL}/assessment/workers/${workerId}`)\n  .then(response => {\n    setWorker(response.data.worker)\n    //the state we want to change is in body but we need to keep track of all the workers so we use the hash table in the body it passes the information back\n    savedWork(response.data.worker.name, response.data.worker.id)\n    setErrorMessage(\"\")\n  })\n  .catch(err => {\n    console.log(err)\n    setErrorMessage(err)\n  })\n}, [])\n\n  let styles = {\n    workOrderContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      // justifyContent: 'center'\n    },\n    wordOrderCard: {\n      margin: 10,\n      height: '40vh',\n      width: '40vw',\n      background: '#F0F8FF',\n      boxShadow: '5px 7px #888888',\n      borderRadius: 5\n    },\n\n  }\n\n  let {email, companyName, image} = worker\n  let worker_name = worker.name\n  let formatedDate = new Date(deadline)\n\n  let error = <div>\n    <h1>{errorMessage}</h1>\n  </div>\n\n\n  return(\n    <>\n        {errorMessage.length > 0 ? error :\n    <div style={styles.workOrderContainer}>\n      <div style={styles.wordOrderCard}>\n      <div>\n      <h3>{name}</h3>\n      <h5>{description}</h5>\n      </div>\n      <div>\n        <div style={{display: 'flex', padding: '10px 0 0 10px', width: '100%'}}>\n          <img style={{borderRadius: '50%', height: 100}} src={image} />\n          <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignContent: 'center', width: '100%'}}>\n            <p>{worker_name}</p>\n            <p>{companyName}</p>\n            <p>{email}</p>\n          </div>\n        </div>\n      </div>\n      <div style={{textAlign: 'right', paddingRight: 10}}>\n      {`${formatedDate.getMonth()}/${formatedDate.getDate()}/${formatedDate.getFullYear()} ${formatedDate.toLocaleTimeString('en-US')}`}\n      </div>\n      </div>\n    </div>\n        }\n    </>\n  )\n}\n\nexport default WorkOrder;"]},"metadata":{},"sourceType":"module"}