{"ast":null,"code":"import _slicedToArray from \"/Users/gsandhu916/Desktop/projects/hatchways_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { throttle } from 'lodash';\nimport WorkOrder from './WorkOrder';\n\nconst Header = () => {\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      workOrders = _useState2[0],\n      setWorkOrders = _useState2[1];\n\n  let _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      savedWorkers = _useState4[0],\n      setSavedWorkers = _useState4[1];\n\n  let _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      savedWorkOrders = _useState6[0],\n      setSavedWorkOrders = _useState6[1];\n\n  useEffect(() => {\n    axios.get(\"https://www.hatchways.io/api/assessment/work_orders\").then(res => {\n      setWorkOrders(res.data.orders);\n      setSavedWorkOrders(res.data.orders);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n\n  function onInputChange(event) {\n    console.log(event.target.value);\n    let inputInfo = event.target.value.replace(' ', '').toLowerCase().trim();\n    let filteredOrders = savedWorkOrders.filter(each => {\n      return each.workerId === savedWorkers[inputInfo];\n    });\n\n    if (filteredOrders.length > 0) {\n      setWorkOrders(filteredOrders);\n    } else {\n      if (workOrders.length !== savedWorkOrders.length) {\n        setWorkOrders(savedWorkOrders);\n      }\n    }\n  }\n\n  function earliest() {\n    let sortedWorkOrder = workOrders.sort((a, b) => {\n      return a.deadline - b.deadline;\n    });\n    setWorkOrders(sortedWorkOrder);\n  }\n\n  function latest() {\n    console.log('running');\n    let sortedWorkOrder = workOrders.sort((a, b) => {\n      return b.deadline - a.deadline;\n    });\n    setWorkOrders(sortedWorkOrder);\n  }\n\n  let throttledChange = throttle(onInputChange, 500);\n\n  function savedWork(workerName, worker_id) {\n    console.log(workerName, '%%%');\n    let newSavedWorkers = Object.assign({}, savedWorkers, {\n      [workerName.replace(' ', '').toLowerCase().trim()]: worker_id\n    });\n    setSavedWorkers(newSavedWorkers);\n  }\n\n  console.log(savedWorkers);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Please enter name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: earliest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"EARLIEST\"), React.createElement(\"button\", {\n    onClick: latest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"LATEST\"), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, workOrders.map(order => {\n    return React.createElement(WorkOrder, Object.assign({\n      key: order.id\n    }, order, {\n      savedWork: savedWork,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  })));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js"],"names":["React","useState","useEffect","axios","throttle","WorkOrder","Header","workOrders","setWorkOrders","savedWorkers","setSavedWorkers","savedWorkOrders","setSavedWorkOrders","get","then","res","data","orders","catch","err","console","log","message","onInputChange","event","target","value","inputInfo","replace","toLowerCase","trim","filteredOrders","filter","each","workerId","length","earliest","sortedWorkOrder","sort","a","b","deadline","latest","throttledChange","savedWork","workerName","worker_id","newSavedWorkers","Object","assign","display","flexWrap","justifyContent","map","order","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA,kBACiBL,QAAQ,CAAC,EAAD,CADzB;AAAA;AAAA,MACbM,UADa;AAAA,MACDC,aADC;;AAAA,mBAEqBP,QAAQ,CAAC,EAAD,CAF7B;AAAA;AAAA,MAEbQ,YAFa;AAAA,MAECC,eAFD;;AAAA,mBAGyBT,QAAQ,CAAC,EAAD,CAHjC;AAAA;AAAA,MAGdU,eAHc;AAAA,MAGGC,kBAHH;;AAKnBV,EAAAA,SAAS,CAAC,MAAK;AACbC,IAAAA,KAAK,CAACU,GAAN,wDACCC,IADD,CACMC,GAAG,IAAI;AACXP,MAAAA,aAAa,CAACO,GAAG,CAACC,IAAJ,CAASC,MAAV,CAAb;AACAL,MAAAA,kBAAkB,CAACG,GAAG,CAACC,IAAJ,CAASC,MAAV,CAAlB;AACD,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD,KAPD;AASD,GAVQ,EAUN,EAVM,CAAT;;AAYA,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,QAAIC,SAAS,GAAGH,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBE,OAAnB,CAA2B,GAA3B,EAAgC,EAAhC,EAAoCC,WAApC,GAAkDC,IAAlD,EAAhB;AACA,QAAIC,cAAc,GAAGpB,eAAe,CAACqB,MAAhB,CAAuBC,IAAI,IAAI;AAClD,aAAOA,IAAI,CAACC,QAAL,KAAkBzB,YAAY,CAACkB,SAAD,CAArC;AACD,KAFoB,CAArB;;AAGA,QAAII,cAAc,CAACI,MAAf,GAAwB,CAA5B,EAA+B;AAC7B3B,MAAAA,aAAa,CAACuB,cAAD,CAAb;AACD,KAFD,MAEO;AACL,UAAGxB,UAAU,CAAC4B,MAAX,KAAsBxB,eAAe,CAACwB,MAAzC,EAAgD;AAC9C3B,QAAAA,aAAa,CAACG,eAAD,CAAb;AACD;AACF;AACF;;AAED,WAASyB,QAAT,GAAoB;AAClB,QAAIC,eAAe,GAAG9B,UAAU,CAAC+B,IAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAC7C,aAAOD,CAAC,CAACE,QAAF,GAAWD,CAAC,CAACC,QAApB;AACD,KAFqB,CAAtB;AAGAjC,IAAAA,aAAa,CAAC6B,eAAD,CAAb;AACD;;AAED,WAASK,MAAT,GAAkB;AAChBtB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAIgB,eAAe,GAAG9B,UAAU,CAAC+B,IAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAC7C,aAAOA,CAAC,CAACC,QAAF,GAAWF,CAAC,CAACE,QAApB;AACD,KAFqB,CAAtB;AAGAjC,IAAAA,aAAa,CAAC6B,eAAD,CAAb;AACD;;AAED,MAAIM,eAAe,GAAGvC,QAAQ,CAACmB,aAAD,EAAgB,GAAhB,CAA9B;;AAEA,WAASqB,SAAT,CAAmBC,UAAnB,EAA+BC,SAA/B,EAA0C;AACxC1B,IAAAA,OAAO,CAACC,GAAR,CAAYwB,UAAZ,EAAwB,KAAxB;AACA,QAAIE,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxC,YAAlB,EAAgC;AAAC,OAACoC,UAAU,CAACjB,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,EAA4BC,WAA5B,GAA0CC,IAA1C,EAAD,GAAoDgB;AAArD,KAAhC,CAAtB;AACApC,IAAAA,eAAe,CAACqC,eAAD,CAAf;AACD;;AACD3B,EAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAEc,aAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,WAAW,EAAC,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEa,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAQ,IAAA,OAAO,EAAEM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIA;AAAK,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,QAAQ,EAAE,MAA5B;AAAoCC,MAAAA,cAAc,EAAE;AAApD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE7C,UAAU,CAAC8C,GAAX,CAAeC,KAAK,IAAI;AACxB,WAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACC;AAAtB,OAA8BD,KAA9B;AAAqC,MAAA,SAAS,EAAEV,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFC,CADF,CAJA,CADF;AAaD,CApED;;AAsEA,eAAetC,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {throttle} from 'lodash';\n\nimport WorkOrder from './WorkOrder';\n\nconst Header = () => {\n  let [ workOrders, setWorkOrders ] = useState([]);\n  let [ savedWorkers, setSavedWorkers ] = useState({});\n  let [savedWorkOrders, setSavedWorkOrders] = useState([])\n\n  useEffect(()=> {\n    axios.get(`https://www.hatchways.io/api/assessment/work_orders`)\n    .then(res => {\n      setWorkOrders(res.data.orders)\n      setSavedWorkOrders(res.data.orders)\n    })\n    .catch(err => {\n      console.log(err.message)\n    })\n\n  }, [])\n\n  function onInputChange(event) {\n    console.log(event.target.value)\n    let inputInfo = event.target.value.replace(' ', '').toLowerCase().trim()\n    let filteredOrders = savedWorkOrders.filter(each => {\n      return each.workerId === savedWorkers[inputInfo]\n    })\n    if (filteredOrders.length > 0) {\n      setWorkOrders(filteredOrders)\n    } else {\n      if(workOrders.length !== savedWorkOrders.length){\n        setWorkOrders(savedWorkOrders)\n      }\n    }\n  }\n\n  function earliest() {\n    let sortedWorkOrder = workOrders.sort((a,b) => {\n      return a.deadline-b.deadline\n    })\n    setWorkOrders(sortedWorkOrder)\n  }\n\n  function latest() {\n    console.log('running')\n    let sortedWorkOrder = workOrders.sort((a,b) => {\n      return b.deadline-a.deadline\n    })\n    setWorkOrders(sortedWorkOrder)\n  }\n\n  let throttledChange = throttle(onInputChange, 500)\n\n  function savedWork(workerName, worker_id) {\n    console.log(workerName, '%%%')\n    let newSavedWorkers = Object.assign({}, savedWorkers, {[workerName.replace(' ', '').toLowerCase().trim()]: worker_id})\n    setSavedWorkers(newSavedWorkers)\n  }\n  console.log(savedWorkers)\n  return(\n    <div>\n      <input onChange={onInputChange} type='text' placeholder='Please enter name'/>\n      <button onClick={earliest}>EARLIEST</button>\n      <button onClick={latest}>LATEST</button>\n    <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\n    { workOrders.map(order => {\n      return <WorkOrder key={order.id} {...order} savedWork={savedWork} />\n    })\n    }\n    </div>\n    </div>\n  )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}