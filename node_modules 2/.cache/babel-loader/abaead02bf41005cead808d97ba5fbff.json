{"ast":null,"code":"import _slicedToArray from \"/Users/gsandhu916/Desktop/projects/hatchways_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/WorkOrder.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport env from \"../env.json\";\n\nconst WorkOrder = ({\n  workerId,\n  name,\n  description,\n  deadline,\n  id,\n  savedWork\n}) => {\n  let _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      worker = _useState2[0],\n      setWorker = _useState2[1];\n\n  let _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  useEffect(() => {\n    axios.get(\"\".concat(env.API_URL, \"/assessment/workers/\").concat(workerId)).then(response => {\n      setWorker(response.data.worker); //the state we want to change is in body but we need to keep track of all the workers so we use the hash table in the body it passes the information back\n\n      savedWork(response.data.worker.name, response.data.worker.id);\n      setErrorMessage(\"\");\n    }).catch(err => {\n      console.log(err);\n      setErrorMessage(err);\n    });\n  }, []);\n  let styles = {\n    wordOrderCard: {\n      margin: 10,\n      height: \"40vh\",\n      width: \"40vw\",\n      background: \"#F0F8FF\",\n      boxShadow: \"5px 7px #888888\",\n      borderRadius: 5\n    }\n  };\n  let email = worker.email,\n      companyName = worker.companyName,\n      image = worker.image;\n  let worker_name = worker.name;\n  let formatedDate = new Date(deadline);\n  let error = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, errorMessage));\n  return React.createElement(React.Fragment, null, errorMessage.length > 0 ? error : React.createElement(\"div\", {\n    className: \"worker-order-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.wordOrderCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, name), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, description)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      padding: \"10px 0 0 10px\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      borderRadius: \"50%\",\n      height: 100\n    },\n    src: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, worker_name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, companyName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, email)))), React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\",\n      paddingRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\".concat(formatedDate.getMonth(), \"/\").concat(formatedDate.getDate(), \"/\").concat(formatedDate.getFullYear(), \" \").concat(formatedDate.toLocaleTimeString(\"en-US\"))))));\n};\n\nexport default WorkOrder;","map":{"version":3,"sources":["/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/WorkOrder.js"],"names":["React","useEffect","useState","axios","env","WorkOrder","workerId","name","description","deadline","id","savedWork","worker","setWorker","errorMessage","setErrorMessage","get","API_URL","then","response","data","catch","err","console","log","styles","wordOrderCard","margin","height","width","background","boxShadow","borderRadius","email","companyName","image","worker_name","formatedDate","Date","error","length","display","padding","flexDirection","justifyContent","alignContent","textAlign","paddingRight","getMonth","getDate","getFullYear","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport env from \"../env.json\";\n\nconst WorkOrder = ({\n  workerId,\n  name,\n  description,\n  deadline,\n  id,\n  savedWork\n}) => {\n  let [worker, setWorker] = useState({});\n  let [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`${env.API_URL}/assessment/workers/${workerId}`)\n      .then(response => {\n        setWorker(response.data.worker);\n        //the state we want to change is in body but we need to keep track of all the workers so we use the hash table in the body it passes the information back\n        savedWork(response.data.worker.name, response.data.worker.id);\n        setErrorMessage(\"\");\n      })\n      .catch(err => {\n        console.log(err);\n        setErrorMessage(err);\n      });\n  }, []);\n\n  let styles = {\n\n    wordOrderCard: {\n      margin: 10,\n      height: \"40vh\",\n      width: \"40vw\",\n      background: \"#F0F8FF\",\n      boxShadow: \"5px 7px #888888\",\n      borderRadius: 5\n    }\n  };\n\n  let { email, companyName, image } = worker;\n  let worker_name = worker.name;\n  let formatedDate = new Date(deadline);\n\n  let error = (\n    <div>\n      <h1>{errorMessage}</h1>\n    </div>\n  );\n\n  return (\n    <>\n      {errorMessage.length > 0 ? (\n        error\n      ) : (\n        <div className='worker-order-container'>\n          <div style={styles.wordOrderCard}>\n            <div>\n              <h3>{name}</h3>\n              <h5>{description}</h5>\n            </div>\n            <div>\n              <div\n                style={{\n                  display: \"flex\",\n                  padding: \"10px 0 0 10px\",\n                  width: \"100%\"\n                }}\n              >\n                <img style={{ borderRadius: \"50%\", height: 100 }} src={image} />\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignContent: \"center\",\n                    width: \"100%\"\n                  }}\n                >\n                  <p>{worker_name}</p>\n                  <p>{companyName}</p>\n                  <p>{email}</p>\n                </div>\n              </div>\n            </div>\n            <div style={{ textAlign: \"right\", paddingRight: 10 }}>\n              {`${formatedDate.getMonth()}/${formatedDate.getDate()}/${formatedDate.getFullYear()} ${formatedDate.toLocaleTimeString(\n                \"en-US\"\n              )}`}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default WorkOrder;\n"]},"metadata":{},"sourceType":"module"}