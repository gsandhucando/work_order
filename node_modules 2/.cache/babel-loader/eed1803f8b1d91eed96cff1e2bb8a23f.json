{"ast":null,"code":"import _slicedToArray from \"/Users/gsandhu916/Desktop/projects/hatchways_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Header = () => {\n  let _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      workOrder = _useState2[0],\n      setWorkOrder = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"https://www.hatchways.io/api/assessment/work_orders\").then(res => {\n      if (res.status !== 200) {\n        throw new Error(res.data.message);\n      }\n\n      setWorkOrder(res.data.orders);\n      console.log(workOrder);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \"spring switch newest / latest\");\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/gsandhu916/Desktop/projects/hatchways_app/src/components/Body.js"],"names":["React","useState","useEffect","axios","Header","workOrder","setWorkOrder","get","then","res","status","Error","data","message","orders","console","log","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA,kBACeH,QAAQ,CAAC,EAAD,CADvB;AAAA;AAAA,MACbI,SADa;AAAA,MACFC,YADE;;AAGnBJ,EAAAA,SAAS,CAAC,MAAK;AACbC,IAAAA,KAAK,CAACI,GAAN,wDACCC,IADD,CACMC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,cAAM,IAAIC,KAAJ,CAAUF,GAAG,CAACG,IAAJ,CAASC,OAAnB,CAAN;AACD;;AACDP,MAAAA,YAAY,CAACG,GAAG,CAACG,IAAJ,CAASE,MAAV,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACD,KAPD,EAQCY,KARD,CAQOC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACL,OAAhB;AACD,KAVD;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kCADF;AAMD,CAvBD;;AAyBA,eAAeT,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst Header = () => {\n  let [ workOrder, setWorkOrder ] = useState('');\n\n  useEffect(()=> {\n    axios.get(`https://www.hatchways.io/api/assessment/work_orders`)\n    .then(res => {\n      if (res.status !== 200) {\n        throw new Error(res.data.message)\n      }\n      setWorkOrder(res.data.orders)\n      console.log(workOrder)\n    })\n    .catch(err => {\n      console.log(err.message)\n    })\n  }, [])\n\n  return(\n    <div>\n      <input />\n      spring switch newest / latest\n    </div>\n  )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}